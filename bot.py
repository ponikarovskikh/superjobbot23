
from vkbottle.bot import Bot,Message
from vkbottle import Keyboard,KeyboardButtonColor,Text,OpenLink,BaseStateGroup,CtxStorage
from vkbottle import PhotoMessageUploader

import requests
import time
import json
bot=Bot(token='vk1.a.gC18gjaTqfcql01jYmAv87GwsY7azlNlgGH2dEQVR06UXYCaEkSZSeXEhsom4wBYHNWkNcBp1T7SdGMD8E7ZPEWnT2TNnMBHG0CuaDAfwe4imZ757iMsCQmnuVkqWGJAIW62IW9bxs4JliThV_krBJPBz6scsVZUZ44hBAgfx8RGfEkhLUjeWuN3X-YWyE_zmVDYjepPxfYHrvFUNe5ptQ')
ctx=CtxStorage()


# –æ–±—å—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —Å–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∏–Ω—Ñ—ã
# ------------------------------------------------------
class SUBSDSATA(BaseStateGroup):
    CITY=0
    PROF=1
    PAY=2
    FINISH=4
    GET = 3



# API –∑–∞–ø—Ä–æ—Å –∫ SJ
#--------------------------------------------------------------
def getinfo(keyword,town,payment):
                    params = {
                    'payment_from':f'{payment}',
                    "sort_new": time.time(),
                    "keyword":f"{keyword}",
                    "town":f'{town}'
                    }
                    headers={
                    'X-Api-App-Id': "v3.r.130155215.a338c216d6fb51385312670e906c0b708b7c3e2b.3be37d75e69e47c96e6e44000d613035b9d07b00",
                    'Authorization': "Bearer v3.r.130155215.eab298d92cb901aced882c514dc818cf46f86c12.ce283e8e18c56e10028a9b45c87d9bcc6b98959d"
                     }
                    endpoint = "https://api.superjob.ru/2.0/vacancies/"
                    response = requests.get(endpoint, headers=headers, params=params,).json()
                    resjson_form = json.dumps(response, ensure_ascii=False, indent=2)
                    pyform = json.loads(resjson_form)
                    newvacancy=pyform['objects']
                    ctx.set('newvacancy',newvacancy)
                    return newvacancy



# 0 —ç—Ç–∞–ø –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
# ----------------------------------------------
@bot.on.message(payload={'cmd':'start'})
@bot.on.message(text=['–ù–∞—á–∞—Ç—å','–Ω–∞—á–∞—Ç—å'])
async def starthandler(message:Message):
    flag=False

    keyboard=(Keyboard(inline=False,one_time=True)
              .add(Text('–ò—Å–∫–∞—Ç—å —Ä–∞–±–æ—Ç—É',{'cmd':'reg'}), color=KeyboardButtonColor.POSITIVE)
              )
    await message.answer('–≠—Ç–æ –±–æ—Ç –≤–∞–∫–∞–Ω—Å–∏–π –æ—Ç SUPERJOBüíö'
                         '\n –ü–æ–º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –≤–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º:\n –ì–æ—Ä–æ–¥ | –ü—Ä–æ—Ñ–µ—Å—Å–∏—è | –ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞üìù\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ò—Å–∫–∞—Ç—å —Ä–∞–±–æ—Ç—É"üîî',keyboard=keyboard)


# 1 —ç—Ç–∞–ø –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ—ã –æ –≥–æ—Ä–æ–¥–µ
# ---------------------------------------
@bot.on.message(payload={'cmd':'reg'})
@bot.on.message(lev='/reg')
async def city_handler(message:Message):
    keyboard = (
            Keyboard(inline=True)
            .add(Text('–ú–æ—Å–∫–≤–∞'))
            .add(Text('–í–æ–ª–≥–æ–≥—Ä–∞–¥'))
            .row()
            .add(Text('–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫'))
            .add(Text('C–ü–ë'))
            .row()
            .add(Text('–í–æ—Ä–æ–Ω–µ–∂'))
            .add(Text('–ö–∞–∑–∞–Ω—å'))
            .row()
            .add(Text("–ö–∞–ª—É–≥–∞"))
            .add(Text('–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä'))
            .row()
            .add(Text("–ü–µ—Ä–º—å"))
            .add(Text('–†–æ—Å—Ç–æ–≤'))

        )
    # photo1= await photo_upd.upload('logo1.jpg')
    await message.answer("–ù–∞–π—Ç–∏ –≤–∞–∫–∞–Ω—Å–∏–∏? –Ø —ç—Ç–æ –º–æ–≥—É! –ü—Ä–∏—Å—Ç—É–ø–∏–º? –í—ã–±–∏—Ä–∞–π –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –ø–∏—à–∏ –≤—Ä—É—á–Ω—É—é üß≠üåÅ", keyboard=keyboard)
    await bot.state_dispenser.set(message.peer_id,SUBSDSATA.PROF)




# 2 —ç—Ç–∞–ø –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ—ã –æ –ø—Ä–æ—Ñ–µ—Å–∏–∏
#---------------------------------------------
@bot.on.message(state=SUBSDSATA.PROF)
async def prof_handler(message:Message):
    if message.text == "–°–ü–ë":
        ctx.set('city','C–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥')
    else:
        ctx.set('city', message.text)
    keyboarad=(Keyboard(inline=True)
            .add(Text('–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç'))
            .add(Text('–î–∏—Ä–µ–∫—Ç–æ—Ä'))
            .row()
            .add(Text('–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫'))
            .add(Text('–î–∏–∑–∞–π–Ω–µ—Ä'))
            .row()
            .add(Text('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'))
            .add(Text('–Æ—Ä–∏—Å—Ç'))
            .row()
            .add(Text('–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞'))
            .add(Text('–í–æ–¥–∏—Ç–µ–ª—å'))
            .row()
            .add(Text('–ú–µ–Ω–µ–¥–∂–µ—Ä'))
            .add(Text('–ü—Ä–æ–¥–∞–≤–µ—Ü'))
               )

    await message.answer('–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏—Å—å —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–µ–π –∏–ª–∏ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç‚ÄçüöÄ',keyboard=keyboarad)
    await bot.state_dispenser.set(message.peer_id,SUBSDSATA.PAY)

# 3 —ç—Ç–∞–ø –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ—ã –æ –∂–µ–ª–∞–µ–º–æ–º –∑–∞—Ä–∞–±–æ—Ç–∫–µ
# --------------------------------------------

@bot.on.message(state=SUBSDSATA.PAY)
async def pay_handler(message:Message):


    ctx.set('prof',message.text)
    keyboarad = (Keyboard(inline=True)
                 .add(Text('10 000‚ÇΩ'))
                 .add(Text('20 000‚ÇΩ'))
                 .row()
                 .add(Text('30 000‚ÇΩ'))
                 .add(Text('50 000‚ÇΩ'))
                 .row()
                 .add(Text('80 000‚ÇΩ'))
                 .add(Text('100 000‚ÇΩ'))
                 .row()
                 .add(Text('150 000‚ÇΩ'))
                 .add(Text('200 000‚ÇΩ'))
                 .row()
                 .add(Text('300 000‚ÇΩ'))
                 .add(Text('400 000‚ÇΩ'))   )
    await message.answer('–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ —Ö–æ—á–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å? –í—ã–±–µ—Ä–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –≤—Ä—É—á–Ω—É—é üíµ', keyboard=keyboarad)
    await bot.state_dispenser.set(message.peer_id, SUBSDSATA.GET)
# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤—ã–¥–∞—á–∞ –†–µ–∑—É–ª—å—Ç–∞—Ç–∞
# ------------------------------------------


@bot.on.message(state=SUBSDSATA.GET)
async def initial_handler(message:Message):
    pay = message.text
    pay = pay.rstrip('‚ÇΩ').replace(' ', '')
    ctx.set('pay', pay)


    keyboard = (Keyboard(one_time=False)
                .add(Text('–ò—Å–∫–∞—Ç—åüîç',{'cmd':'reg'}),color=KeyboardButtonColor.PRIMARY)
                )
    # keyboard1 = (Keyboard(one_time=True)
    #             .add(Text('–ò—Å–∫–∞—Ç—åüîé', {'cmd': 'reg'}), color=KeyboardButtonColor.PRIMARY)
    #             )
    # –∑–∞–ø—Ä–æ—Å –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –∞–ø–∏!—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –¥–µ–π—Å—Ç–≤–∏–π  –ø—Ä–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–º —Ç–æ–∫–µ–Ω–µ! —Å –±–ª–æ–∫–æ–º –≤–∞–∫–∞–Ω—Å–∏–π –∏ –∫–æ–ª–≤–æ–º –≤–∞–∫–∞–Ω—Å–∏–π
    # ---------------------------------------
    newvacancy = getinfo(ctx.get('prof'), ctx.get('city'), ctx.get('pay'))




















    lenlist=len(newvacancy)
    ctx.set('newvacancy', newvacancy)
    ctx.set('len',lenlist)
    u=message.payload
    # —Ä–∞–∑–±–∏–≤–∫–∞
    # ------------------------------------------------
    d=0
    await message.answer(f"–í–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ãüé≤:\n–ì–æ—Ä–æ–¥ üåÅ:{ctx.get('city')}\n–ü—Ä–æ—Ñ–µ—Å—Å–∏—èüë®‚Äçüíª:{ctx.get('prof')}\n–ó–∞—Ä–ø–ª–∞—Ç–∞üí≤ –æ—Ç: {ctx.get('pay')}\n –û–∂–∏–¥–∞–π—Ç–µ –≤—ã–¥–∞—á—Éüïí",keyboard=keyboard)
    ctx.set('num', 0)
    # await message.answer('üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢üü¢')
    time.sleep(1)
    try:
        while d <= 5 and d<=ctx.get("len") :
                # if ctx.get("len") ==0:
                #     await message.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, –º—ã –Ω–µ –Ω–∞—à–ª–∏ –≤–∞–∫–∞–Ω—Å–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º\n –ù–∞–ø–∏—à–∏—Ç–µ "–ù–∞—á–∞—Ç—å"',keyboard=keyboard)
                #     break
                # elif ctx.get("len") < 5 and ctx.get("len")!=0:
                #     await message.answer(f'–í–∞–∫–∞–Ω—Å–∏—è {ctx.get("num")+1} –∏–∑ {ctx.get("len")}:')
                # else:
                #     await message.answer(f'–í–∞–∫–∞–Ω—Å–∏—è {ctx.get("num")+1} –∏–∑ {5}:')
                profession = newvacancy[ctx.get("num")]['profession']
                link = newvacancy[ctx.get("num")]['link']
                # s = pyshorteners.Shortener()
                # link = s.tinyurl.short(
                #     f"{link}")
                keyboard1=(Keyboard(inline=True)
                           .add(OpenLink(link,'–û—Ç–∫—Ä—ã—Ç—åüöÄ'))
                           )

                payment = f"{newvacancy[ctx.get('num')]['payment_from']} - {newvacancy[ctx.get('num')]['payment_to']}"
                if payment=='0 - 0':
                    payment='–ü–æ—Å–ª–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è'
                company = newvacancy[ctx.get('num')]["firm_name"]

                ctx.set('num', d)
                await message.answer (f"üíº–í–∞–∫–∞–Ω—Å–∏—è: {profession} \n üèô–ö–æ–º–ø–∞–Ω–∏—è:{company} \n üí≤–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã: {payment} \n üîú–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ –æ –≤–∞–∫–∞–Ω—Å–∏–∏:",keyboard=keyboard1)

                time.sleep(1)
                d += 1
        ctx.set('num', 0)
        await message.answer('–ü–æ–∫–∞ –≤—Å—ë‚úî –ù–∞–∂–º–∏—Ç–µ "–ò—Å–∫–∞—Ç—åüîç"',keyboard=keyboard)
    except IndexError:

        await message.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, –º—ã –Ω–µ –Ω–∞—à–ª–∏ –≤–∞–∫–∞–Ω—Å–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º\n –ù–∞–ø–∏—à–∏—Ç–µ "–ò—Å–∫–∞—Ç—åüîç"',keyboard=keyboard)


#
# @bot.on.message(text='–í–ø–µ—Ä–µ–¥')
# async def scrolltoward(message:Message):
#     keyboard = (Keyboard(one_time=True)
#                 .add(Text('–ù–∞–∑–∞–¥',{'cmd':'back'}))
#                 .add(Text('–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É‚ùé',{'cmd':'reg'}))
#                 .add(Text("–í–ø–µ—Ä–µ–¥ ", {'cmd': 'next2'})))
#
#
#     newvacancy = ctx.get('newvacancy')
#     profession = newvacancy[ctx.get("num")]['profession']
#     link = newvacancy[ctx.get("num")]['link']
#     payment = f"{newvacancy[ctx.get('num')]['payment_from']} - {newvacancy[ctx.get('num')]['payment_to']}"
#     company = newvacancy[ctx.get('num')]["firm_name"]
#
#     time.sleep(2)
#     await message.answer(f'–í–∞–∫–∞–Ω—Å–∏—è {ctx.get("num")+1} –∏–∑ {ctx.get("len")}:')
#     await message.answer( f"üíº–í–∞–∫–∞–Ω—Å–∏—è: {profession} \n üèô–ö–æ–º–ø–∞–Ω–∏—è:{company} \n üí≤–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã: {payment} \n üîú–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ –æ –≤–∞–∫–∞–Ω—Å–∏–∏:\n {link} ",keyboard=keyboard)
#

# @bot.on.message(payload={'cmd':'next2'})
# async def scrolltoward(message:Message):
#
#     keyboard = (Keyboard(one_time=True)
#                 .add(Text('–ù–∞–∑–∞–¥',{'cmd':'back'}))
#                 .add(Text('–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É‚ùé',{'cmd':'reg'}))
#                 .add(Text("–í–ø–µ—Ä–µ–¥ ", {'cmd': 'next1'})))
#
#     i=ctx.get('num')
#     i =i+1
#     ctx.set('num', i)
#     newvacancy = ctx.get('newvacancy')
#     profession = newvacancy[ctx.get("num")]['profession']
#     link = newvacancy[ctx.get("num")]['link']
#     payment = f"{newvacancy[ctx.get('num')]['payment_from']} - {newvacancy[ctx.get('num')]['payment_to']}"
#     company = newvacancy[ctx.get('num')]["firm_name"]
#
#     await message.answer(f'–í–∞–∫–∞–Ω—Å–∏—è {ctx.get("num")+1} –∏–∑ {ctx.get("len")}:')
#     await message.answer(f"üíº–í–∞–∫–∞–Ω—Å–∏—è: {profession} \n üèô–ö–æ–º–ø–∞–Ω–∏—è:{company} \n üí≤–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã: {payment} \n üîú–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ –æ –≤–∞–∫–∞–Ω—Å–∏–∏:\n {link} ", keyboard=keyboard)
#
#









# @bot.on.message(payload={'cmd':'back'})
# async def scrollbackward(message:Message):
#     keyboard = (Keyboard(one_time=True)
#                     .add(Text('–ù–∞–∑–∞–¥', {'cmd':'back'}))
#                     .add(Text('–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É‚ùé',{'cmd':'reg'}))
#                     .add(Text("–í–ø–µ—Ä–µ–¥", {'cmd':'next'}))
#                     )
#     i = ctx.get('num')
#     i =i-1
#     ctx.set('num', i)
#     newvacancy = ctx.get('newvacancy')
#     profession = newvacancy[ctx.get("num")]['profession']
#     link = newvacancy[ctx.get("num")]['link']
#     payment = f"{newvacancy[ctx.get('num')]['payment_from']} - {newvacancy[ctx.get('num')]['payment_to']}"
#     company = newvacancy[ctx.get('num')]["firm_name"]
#     time.sleep(2)
#     await message.answer(f'–í–∞–∫–∞–Ω—Å–∏—è {ctx.get("num") + 1} –∏–∑ {ctx.get("len")}:')
#     await message.answer(f"üíº–í–∞–∫–∞–Ω—Å–∏—è: {profession} \n üèô–ö–æ–º–ø–∞–Ω–∏—è:{company} \n üí≤–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã: {payment} \n üîú–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ –æ –≤–∞–∫–∞–Ω—Å–∏–∏:\n {link} ",keyboard=keyboard)










bot.run_forever()













