
from vkbottle.bot import Bot,Message
from vkbottle import Keyboard,KeyboardButtonColor,Text,OpenLink,BaseStateGroup,CtxStorage,EMPTY_KEYBOARD

from API_SJ_REQUEST import *
from datetime import datetime
bot=Bot(token='vk1.a.gC18gjaTqfcql01jYmAv87GwsY7azlNlgGH2dEQVR06UXYCaEkSZSeXEhsom4wBYHNWkNcBp1T7SdGMD8E7ZPEWnT2TNnMBHG0CuaDAfwe4imZ757iMsCQmnuVkqWGJAIW62IW9bxs4JliThV_krBJPBz6scsVZUZ44hBAgfx8RGfEkhLUjeWuN3X-YWyE_zmVDYjepPxfYHrvFUNe5ptQ')
ctx=CtxStorage()


# –æ–±—å—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —Å–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∏–Ω—Ñ—ã
# ------------------------------------------------------
class SUBSDSATA(BaseStateGroup):
    CITY=0
    PROF=1
    PAY=2
    GO=4
    GET = 3
    CONT=5
    UPDATE=6
    BACK=7



# API –∑–∞–ø—Ä–æ—Å –∫ SJ
#--------------------------------------------------------------




# 0 —ç—Ç–∞–ø –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
# ----------------------------------------------
@bot.on.message(state=None,payload={"command":"start"})
@bot.on.message(text=['–ù–∞—á–∞—Ç—å','–Ω–∞—á–∞—Ç—å'])
async def starthandler(message:Message):

    users = await bot.api.users.get(message.from_id)
    keyboard=(Keyboard(inline=False,one_time=True)
              .add(Text('–ò—Å–∫–∞—Ç—å —Ä–∞–±–æ—Ç—É',{'cmd':'reg'}), color=KeyboardButtonColor.POSITIVE)
              )
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è,{users[0].first_name} –≠—Ç–æ –±–æ—Ç –≤–∞–∫–∞–Ω—Å–∏–π –æ—Ç SUPERJOBüíö'
                         '\n –ü–æ–º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –≤–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º:\n –ì–æ—Ä–æ–¥ | –ü—Ä–æ—Ñ–µ—Å—Å–∏—è | –ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞üìù\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ò—Å–∫–∞—Ç—å —Ä–∞–±–æ—Ç—É"üîî',keyboard=keyboard)


# 1 —ç—Ç–∞–ø –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ—ã –æ –≥–æ—Ä–æ–¥–µ
# ---------------------------------------
@bot.on.message(payload={'cmd':'reg'})
@bot.on.message(lev='/reg')
async def city_handler(message:Message):
    keyboard = (
            Keyboard(inline=True)
            .add(Text('–ú–æ—Å–∫–≤–∞'))
            .add(Text('–í–æ–ª–≥–æ–≥—Ä–∞–¥'))
            .row()
            .add(Text('–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫'))
            .add(Text('C–ü–ë'))
            .row()
            .add(Text('–í–æ—Ä–æ–Ω–µ–∂'))
            .add(Text('–ö–∞–∑–∞–Ω—å'))
            .row()
            .add(Text("–ö–∞–ª—É–≥–∞"))
            .add(Text('–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä'))
            .row()
            .add(Text("–ü–µ—Ä–º—å"))
            .add(Text('–†–æ—Å—Ç–æ–≤'))

        )
    # photo1= await photo_upd.upload('logo1.jpg')
    await message.answer("–ù–∞–π—Ç–∏ –≤–∞–∫–∞–Ω—Å–∏–∏? –Ø —ç—Ç–æ –º–æ–≥—É! –ü—Ä–∏—Å—Ç—É–ø–∏–º? –í—ã–±–∏—Ä–∞–π –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –ø–∏—à–∏ –≤—Ä—É—á–Ω—É—é üß≠üåÅ", keyboard=keyboard,attachment='photo-217363563_457239024')
    await bot.state_dispenser.set(message.peer_id,SUBSDSATA.PROF)




# 2 —ç—Ç–∞–ø –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ—ã –æ –ø—Ä–æ—Ñ–µ—Å–∏–∏
#---------------------------------------------
@bot.on.message(state=SUBSDSATA.PROF)
async def prof_handler(message:Message):
    if message.text == "–°–ü–ë":
        ctx.set('city','C–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥')
    else:
        ctx.set('city', message.text)
    keyboarad=(Keyboard(inline=True)
            .add(Text('–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç'))
            .add(Text('–î–∏—Ä–µ–∫—Ç–æ—Ä'))
            .row()
            .add(Text('–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫'))
            .add(Text('–î–∏–∑–∞–π–Ω–µ—Ä'))
            .row()
            .add(Text('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'))
            .add(Text('–Æ—Ä–∏—Å—Ç'))
            .row()
            .add(Text('–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞'))
            .add(Text('–í–æ–¥–∏—Ç–µ–ª—å'))
            .row()
            .add(Text('–ú–µ–Ω–µ–¥–∂–µ—Ä'))
            .add(Text('–ü—Ä–æ–¥–∞–≤–µ—Ü'))
               )

    await message.answer('–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏—Å—å —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–µ–π –∏–ª–∏ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç‚ÄçüöÄ',keyboard=keyboarad,attachment='photo-217363563_457239025')
    await bot.state_dispenser.set(message.peer_id,SUBSDSATA.PAY)

# 3 —ç—Ç–∞–ø –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ—ã –æ –∂–µ–ª–∞–µ–º–æ–º –∑–∞—Ä–∞–±–æ—Ç–∫–µ
# --------------------------------------------

@bot.on.message(state=SUBSDSATA.PAY)
async def pay_handler(message:Message):
    ctx.set('prof',message.text)
    keyboarad0 = (Keyboard(inline=True)
                 .add(Text('10 000‚ÇΩ',{'cmd':'edit'}))
                 .add(Text('20 000‚ÇΩ',{'cmd':'edit'}))
                 .row()
                 .add(Text('30 000‚ÇΩ',{'cmd':'edit'}))
                 .add(Text('50 000‚ÇΩ',{'cmd':'edit'}))
                 .row()
                 .add(Text('80 000‚ÇΩ',{'cmd':'edit'}))
                 .add(Text('100 000‚ÇΩ',{'cmd':'edit'}))
                 .row()
                 .add(Text('150 000‚ÇΩ',{'cmd':'edit'}))
                 .add(Text('200 000‚ÇΩ',{'cmd':'edit'}))
                 .row()
                 .add(Text('300 000‚ÇΩ',{'cmd':'edit'}))
                 .add(Text('400 000‚ÇΩ',{'cmd':'edit'}))   )
    ctx.set('pay', None)
    ctx.set('keystart',True)
    await message.answer('–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ —Ö–æ—á–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å? –í—ã–±–µ—Ä–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –≤—Ä—É—á–Ω—É—é üíµ', keyboard=keyboarad0,attachment='photo-217363563_457239026')
    await bot.state_dispenser.set(message.peer_id, SUBSDSATA.CONT)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤—ã–¥–∞—á–∞ –†–µ–∑—É–ª—å—Ç–∞—Ç–∞
# ------------------------------------------


@bot.on.message(state=SUBSDSATA.CONT,payload={'cmd':'edit'})
async def initial_handler(message:Message):
    if ctx.get('pay') ==None:
        pay = message.text
        pay = pay.rstrip('‚ÇΩ').replace(' ', '')
        ctx.set('pay', pay)

    keyboardstart = (Keyboard(one_time=True,inline=False)
                .add(Text('–ü–æ–ª—É—á–∏—Ç—å',{'cmd':'get'}), color=KeyboardButtonColor.POSITIVE)
                .add(Text('–ò–∑–º–µ–Ω–∏—Ç—å', {'cmd': 'reg'}), color=KeyboardButtonColor.PRIMARY)
                )
    keyboardcont = (Keyboard(one_time=True, inline=False)

                .add(Text('–ò–∑–º–µ–Ω–∏—Ç—å', {'cmd': 'reg'}), color=KeyboardButtonColor.PRIMARY)

                .add(Text('–ù–∞–∑–∞–¥', {'cmd': 'menu'}), color=KeyboardButtonColor.SECONDARY)
                )
    if ctx.get('keystart')==True:
        await message.answer(f"–í–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ãüé≤:\n–ì–æ—Ä–æ–¥ :{ctx.get('city')}"
                         f"\n–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:{ctx.get('prof')}\n–ó–∞—Ä–ø–ª–∞—Ç–∞ –æ—Ç: {ctx.get('pay')}"
                         f'\n\n –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ - "–ü–æ–ª—É—á–∏—Ç—å"\n'
                         f'–ï—Å–ª–∏ –ó–∞–ø—Ä–æ—Å—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å - –ò–∑–º–µ–Ω–∏—Ç—å ',keyboard=keyboardstart,attachment='photo-217363563_457239027')
        await bot.state_dispenser.set(message.peer_id, SUBSDSATA.GO)
    elif ctx.get('keystart')==False:
        await message.answer(f"–í–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ãüé≤:\n–ì–æ—Ä–æ–¥ :{ctx.get('city')}"
                             f"\n–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:{ctx.get('prof')}\n–ó–∞—Ä–ø–ª–∞—Ç–∞ –æ—Ç: {ctx.get('pay')}"
                             f'\n\n'
                             f'–ï—Å–ª–∏ –ó–∞–ø—Ä–æ—Å—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å - –ò–∑–º–µ–Ω–∏—Ç—å ', keyboard=keyboardcont,
                             attachment='photo-217363563_457239027')



#–≤—ã–¥–∞—á–∞ 5 –≤–∞–∫–∞–Ω—Å–∏–π –∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é
@bot.on.message(state=SUBSDSATA.GO,payload={'cmd':'get'})
async def confirm_handler(message: Message):
    keyboard0 = (Keyboard(one_time=False)
                .add(Text('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç'))
                .add(Text('–î–∞–≤–∞–π –µ—â–µ',{'cmd':'add'}))
                .add(Text('–ú–æ–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',{'cmd':'edit'}))
                .row()
                .add(Text('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', {'cmd': 'menu'}))
                 )

    keyboard1=(Keyboard(one_time=False)
                .add(Text('–ò–∑–º–µ–Ω–∏—Ç—å',{'cmd':'edit'}), color=KeyboardButtonColor.PRIMARY))

# –∑–∞–ø—Ä–æ—Å –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –∞–ø–∏!–ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –¥–µ–π—Å—Ç–≤–∏–π
# –ø—Ä–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–º —Ç–æ–∫–µ–Ω–µ! —Å –±–ª–æ–∫–æ–º –≤–∞–∫–∞–Ω—Å–∏–π –∏ –∫–æ–ª–≤–æ–º –≤–∞–∫–∞–Ω—Å–∏–π
# ---------------------------------------
    newvacancy = getinfo(ctx.get('prof'), ctx.get('city'), ctx.get('pay'))
    lenlist=len(newvacancy)
    ctx.set('newvacancy', newvacancy)
    ctx.set('len',lenlist)

# —Ä–∞–∑–±–∏–≤–∫–∞
# -----------------------------------------------
    ctx.set('keystart', False)
    ctx.set('num', 0)
    ctx.set('subs', False)
    try:
            while ctx.get("num") < 5 and ctx.get("num")<=ctx.get("len") :
                if ctx.get("num") == 0:
                    with open('tokens.json', 'r') as f:
                        dict = json.load(f)
                    if int(dict['date_published']) < int(newvacancy[ctx.get("num")]['date_published']):
                        dict['date_published'] = newvacancy[ctx.get("num")]['date_published']
                        ctx.set('datpub0',newvacancy[ctx.get("num")]['date_published'])
                    with open('tokens.json', 'w') as f:
                        json.dump(dict, f)
                await message.answer(f'–í–∞–∫–∞–Ω—Å–∏—è {ctx.get("num")+1} –∏–∑ {5}:')
                profession = newvacancy[ctx.get("num")]['profession']
                time=int(newvacancy[ctx.get("num")]['date_published'])

                link = newvacancy[ctx.get("num")]['link']
                keyboard1=(Keyboard(inline=True)
                           .add(OpenLink(link,'–û—Ç–∫—Ä—ã—Ç—åüöÄ'))
                           )
                if int(newvacancy[ctx.get('num')]['payment_from'])<int(ctx.get('pay')) and int(newvacancy[ctx.get('num')]['payment_from'])!=0 :
                    payment = f"{ctx.get('pay')} - {newvacancy[ctx.get('num')]['payment_to']}"
                else:
                    payment = f"{newvacancy[ctx.get('num')]['payment_from']} - {newvacancy[ctx.get('num')]['payment_to']}"
                if payment=='0 - 0':
                    payment='–ü–æ—Å–ª–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è'
                company = newvacancy[ctx.get('num')]["firm_name"]
                ctx.set('num', ctx.get('num')+1)
                await message.answer (f"üíº–í–∞–∫–∞–Ω—Å–∏—è: {profession} \n üèô–ö–æ–º–ø–∞–Ω–∏—è:{company} \n üí≤–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã: {payment} \nüîú–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ –æ –≤–∞–∫–∞–Ω—Å–∏–∏:",keyboard=keyboard1)
            await message.answer('–ß—Ç–æ –¥–∞–ª—å—à–µ?',keyboard=keyboard0)
            await bot.state_dispenser.set(message.peer_id, SUBSDSATA.CONT)
    except IndexError:
        await message.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, –º—ã –Ω–µ –Ω–∞—à–ª–∏ –≤–∞–∫–∞–Ω—Å–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º\n –î–∞–≤–∞–π—Ç–µ –∏–∑–º–µ–Ω–∏–º "',keyboard=keyboard1)
        await bot.state_dispenser.set(message.peer_id, SUBSDSATA.CONT)

#–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.on.message(state=SUBSDSATA.CONT,payload={'cmd':'menu'})
async def Menu_handler(message: Message):
    ctx.set('keystart', False)
    keyboard0 = (Keyboard(one_time=False)
                 .add(Text( '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç'))
                 .add(Text('–î–∞–≤–∞–π –µ—â–µ', {'cmd': 'add'}))
                 .row()
                 .add(Text('–ú–æ–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',{'cmd':'edit'}))
                 .add(Text('–°–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É',{'cmd':'subs'}))
                      )
    keyboard1 = (Keyboard(one_time=False)
                 .add(Text('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç'))
                 .add(Text('–î–∞–≤–∞–π –µ—â–µ', {'cmd': 'add'}))
                 .row()
                 .add(Text('–ú–æ–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',{'cmd':'edit'}))
                 .add(Text('–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', {'cmd': 'subs'})))
    if ctx.get('subs')==False:
        await message.answer('–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é',keyboard=keyboard0)

    elif ctx.get('subs')==True:
        await message.answer('–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', keyboard=keyboard1)
    await bot.state_dispenser.set(message.peer_id, SUBSDSATA.CONT)

#–¥–æ–ø –≤—ã–¥–∞—á–∞
@bot.on.message(state=SUBSDSATA.CONT,payload={'cmd':'add'})
async def ADD_handler(message: Message):
    finish=ctx.get("num")
    keyboard0 = (Keyboard(one_time=False)
                 .add(Text('–î–∞–≤–∞–π –µ—â–µ', {'cmd': 'add'}))
                 .add(Text('–ù–∞–∑–∞–¥',{'cmd': 'menu'}))
                 )
    keyboard2 = (Keyboard(one_time=False)
                 .add(Text('–ù–∞–∑–∞–¥', {'cmd': 'menu'}))
                 )
    if finish+5<=ctx.get("len"):
        while  ctx.get("num") < finish+5 and finish+5 <= ctx.get("len"):
            await message.answer(f'–í–∞–∫–∞–Ω—Å–∏—è {ctx.get("num") + 1} –∏–∑ {finish+5}:')
            profession = ctx.get('newvacancy')[ctx.get("num")]['profession']
            time = int(ctx.get('newvacancy')[ctx.get("num")]['date_published'])
            date = datetime.utcfromtimestamp(time).strftime('%Y-%m-%d %H:%M:%S')
            link = ctx.get('newvacancy')[ctx.get("num")]['link']
            company = ctx.get('newvacancy')[ctx.get('num')]["firm_name"]
            keyboard1 = (Keyboard(inline=True)
                     .add(OpenLink(link, '–û—Ç–∫—Ä—ã—Ç—åüöÄ'))
                     )
            payment = f"{ctx.get('newvacancy')[ctx.get('num')]['payment_from']} - {ctx.get('newvacancy')[ctx.get('num')]['payment_to']}"
            if payment == '0 - 0':
                payment = '–ü–æ—Å–ª–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è'
            ctx.set('num', ctx.get("num")+1)
            await message.answer(
            f"üíº–í–∞–∫–∞–Ω—Å–∏—è: {profession} \n üèô–ö–æ–º–ø–∞–Ω–∏—è:{company} \n üí≤–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã: {payment}\nüîú–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∏ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ –æ –≤–∞–∫–∞–Ω—Å–∏–∏:",
            keyboard=keyboard1)
        await message.answer(keyboard=keyboard0)
        await bot.state_dispenser.set(message.peer_id, SUBSDSATA.CONT)
    if finish + 5 > ctx.get("len"):
        await message.answer('–£–ø—Å, –≤–∞–∫–∞–Ω—Å–∏–π –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å',keyboard=keyboard2)
        ctx.set('num',0)
        await bot.state_dispenser.set(message.peer_id, SUBSDSATA.CONT)



#–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
@bot.on.message(state=SUBSDSATA.CONT,payload={'cmd':'subs'})
async def subs_handler(message: Message):
    keyboard0=(Keyboard(one_time=False)
                 .add(Text('–ù–∞–∑–∞–¥', {'cmd': 'menu'}))
                 )
    if ctx.get('subs')==False:
        ctx.set('subs',True)
        await message.answer('–ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞', keyboard=keyboard0)
        await bot.state_dispenser.set(message.peer_id, SUBSDSATA.CONT)
    elif ctx.get('subs') == True:
        ctx.set('subs', False  )
        await message.answer('–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞',keyboard=keyboard0)
        await bot.state_dispenser.set(message.peer_id, SUBSDSATA.CONT)
















bot.run_forever()













